{"remainingRequest":"/Users/zouxinyu/unicorn-ui/node_modules/babel-loader/lib/index.js!/Users/zouxinyu/unicorn-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zouxinyu/unicorn-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zouxinyu/unicorn-ui/src/components/Calendar/Calendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zouxinyu/unicorn-ui/src/components/Calendar/Calendar.vue","mtime":1565763256714},{"path":"/Users/zouxinyu/unicorn-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zouxinyu/unicorn-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zouxinyu/unicorn-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zouxinyu/unicorn-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'calendar',\n  data: function data() {\n    return {\n      // 今年\n      year: 1970,\n      // 月数\n      month: 1,\n      // 今天号数\n      day: 1,\n      show: false,\n      monthName: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      dayName: ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'],\n      // 这个月的天数\n      dayArrNow: [],\n      // 下个月的天数\n      dayArrAfter: [],\n      // 上个月的天数\n      dayArrBefore: [],\n      // 今天的星期\n      nowWeekday: 4,\n      // 每个月第一天的星期数\n      firstWeekday: 4,\n      // 每个月最后一天的星期数\n      lastWeekday: 6,\n      isLeap: false\n    };\n  },\n  methods: {\n    getDateMoble: function getDateMoble() {\n      this.show = !this.show;\n    },\n    setDay: function setDay(dayNum, arr) {\n      for (var i = 1; i <= dayNum; i++) {\n        arr.push(i);\n      }\n    },\n\n    /**\n     * 根据当月份生成日期\n     * @param {Number} 当前月份\n     * @param {Arr} 存储日期的数组\n     */\n    getDate: function getDate(month, arr) {\n      arr.splice(0);\n\n      if (month === 1 || month === 3 || month === 5 || month === 7 || month === 8 || month === 10 || month === 12) {\n        this.setDay(31, arr);\n      } else if (month === 2) {\n        if (this.isLeap) {\n          this.setDay(29, arr);\n        } else {\n          this.setDay(28, arr);\n        }\n      } else {\n        this.setDay(30, arr);\n      }\n    },\n    // 生成当前以及上个月下个月的\n    getDateNow: function getDateNow() {\n      var now = this.month / 1;\n      var after = now + 1;\n      var before = now - 1;\n      after > 12 ? after = 1 : after;\n      before < 1 ? before = 12 : before;\n\n      if (this.year % 400 === 0 || this.year % 4 === 0 && this.year % 100 !== 0) {\n        this.isLeap = true;\n      } else {\n        this.isLeap = false;\n      }\n\n      this.getDate(now, this.dayArrNow);\n      this.getDate(after, this.dayArrAfter);\n      this.getDate(before, this.dayArrBefore);\n    },\n    // 渲染日期\n    showDay: function showDay() {\n      var _this = this;\n\n      var dayIndex = 0; // 日期dom\n\n      var dayLine0 = this.$refs.dayLine0;\n      var dayLine1 = this.$refs.dayLine1;\n      var dayLine2 = this.$refs.dayLine2;\n      var dayLine3 = this.$refs.dayLine3;\n      var dayLine4 = this.$refs.dayLine4;\n      var dayLine5 = this.$refs.dayLine5; // 渲染上个月的残留日期\n\n      dayLine1.forEach(function (ele, index) {\n        if (_this.firstWeekday >= index) {\n          ele.innerHTML = _this.dayArrBefore[_this.dayArrBefore.length - (_this.firstWeekday - index - 1)];\n        }\n      }); // 渲染下个月残留日期\n\n      var num = 0;\n      dayLine5.forEach(function (ele, index) {\n        if (_this.lastWeekday <= index) {\n          ele.innerHTML = _this.dayArrAfter[index - num - 1];\n        } else {\n          num++;\n        }\n      }); // 渲染当前月份的所有日期\n\n      dayLine1.forEach(function (ele, index) {\n        if (_this.firstWeekday - 1 <= index) {\n          dayIndex = index - (_this.firstWeekday - 1);\n          ele.innerHTML = _this.dayArrNow[dayIndex];\n        }\n      }); // 当月份开始时间5行放不下时\n\n      dayLine0.forEach(function (ele, index) {\n        if (index - 6 >= _this.firstWeekday) {\n          ele.innerHTML = _this.dayArrNow[index - 6 - _this.firstWeekday];\n        } else {\n          ele.innerHTML = _this.dayArrBefore[_this.dayArrBefore.length - 13 + index + dayIndex];\n        }\n      });\n      dayIndex = this.getMidDay(dayLine2, dayIndex);\n      dayIndex = this.getMidDay(dayLine3, dayIndex);\n      dayIndex = this.getMidDay(dayLine4, dayIndex);\n      dayLine5.forEach(function (ele, index) {\n        if (_this.dayArrNow[dayIndex + index + 1]) {\n          ele.innerHTML = _this.dayArrNow[dayIndex + index + 1];\n        }\n      });\n    },\n\n    /**\n     *  渲染中间3行\n     * @param {Arr} arr 用于遍历\n     * @param {index} index 遍历开始的索引\n     * */\n    getMidDay: function getMidDay(arr, dayIndex) {\n      var _this2 = this;\n\n      arr.forEach(function (ele, index) {\n        ele.innerHTML = _this2.dayArrNow[dayIndex + index + 1];\n      });\n      return dayIndex + 7;\n    },\n\n    /**\n     * 点击更换日期\n     * @param {number} index 传入当前索引\n     * @param {String} flag 判断是否为第一排额外多出天数\n     */\n    returnDay: function returnDay(index, flag) {\n      if (index < this.firstWeekday || index - 29 > this.lastWeekday) {\n        return;\n      } else if (this.firstWeekday <= 0 && flag) {\n        this.day = this.dayArrNow[index - 7 - this.firstWeekday];\n      } else {\n        if (flag) {\n          return;\n        } else {\n          this.day = this.dayArrNow[index - this.firstWeekday];\n          this.$emit('on-change', \"\".concat(this.day, \"/\").concat(this.month, \"/\").concat(this.year));\n        }\n      }\n    },\n\n    /**\n     * 点击更改月份\n     * @param {String} 传入进入上个月或者下个月\n     */\n    changeMonth: function changeMonth(flag) {\n      if (flag === 'go') {\n        this.month++;\n\n        if (this.month > 12) {\n          this.year++;\n          this.month = 1;\n        }\n\n        this.changeMonthItem();\n      } else {\n        this.month--;\n\n        if (this.month < 1) {\n          this.year--;\n          this.month = 12;\n        }\n\n        this.changeMonthItem();\n      }\n    },\n\n    /**\n     * 更改月份时的操作\n     */\n    changeMonthItem: function changeMonthItem() {\n      this.getDateNow();\n      this.getFL();\n      this.day = 1;\n      this.showDay();\n    },\n\n    /**\n     * 生成每月第一天以及最后一天\n     */\n    getFL: function getFL() {\n      var lastWeekday = new Date(this.year, this.month, 0);\n      this.lastWeekday = lastWeekday.getDay();\n      this.firstWeekday = this.lastWeekday + 30 - this.dayArrNow.length;\n    }\n  },\n  mounted: function mounted() {\n    var date = new Date();\n    var month = date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1;\n    var strDate = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\n    this.year = date.getFullYear();\n    this.month = month;\n    this.day = strDate;\n    this.nowWeekday = date.getDay();\n    this.getDateNow();\n    this.getFL();\n    this.$emit('on-change', \"\".concat(this.day, \"/\").concat(this.month, \"/\").concat(this.year));\n  }\n};",{"version":3,"sources":["Calendar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"unicorn-calendar-main\">\n    <div class=\"unicorn-calendar-sec\">\n      <div>\n        <span>{{day}}</span>/<span>{{month}}</span>/<span>{{year}}</span>\n      </div>\n\n      <img v-if=\"!show\" @click=\"getDateMoble(), showDay()\" src=\"./img/calendar.svg\" alt=\"\">\n      <img v-else @click=\"getDateMoble(), showDay()\" src=\"./img/calendar-sel.svg\" alt=\"\">\n    </div>\n\n    <div v-show=\"show\" class=\"unicorn-calendar-choose-sec\">\n      <div class=\"unicorn-calendar-choose-month\">\n        <img @click=\"changeMonth('back')\" src=\"./img/back.svg\" alt=\"上个月\">\n        <span>{{monthName[month / 1 - 1]}} {{year}}</span>\n        <img @click=\"changeMonth('go')\" src=\"./img/next.svg\" alt=\"下个月\">\n      </div>\n\n      <div class=\"unicorn-calendar-choose-day-sec\">\n        <div class=\"unicorn-calendar-choose-dayName\">\n          <span v-for=\"(item, index) in dayName\" :key=\"index\">{{item}}</span>\n        </div>\n\n        <div class=\"unicorn-line\">\n          <div v-for=\"index in 20\" :key=\"index\" class=\"unicorn-line-item\"></div>\n        </div>\n\n        <!-- 具体天数列表 -->\n        <div class=\"unicorn-day-sec\">\n          <div class=\"unicorn-dayLine\">\n            <span ref=\"dayLine0\" v-for=\"index in 7\" :key=\"index\" \n            class=\"unicorn-day\"\n            :class=\"{'unicorn-day-notnow': index - 6 <= firstWeekday, \n            'unicorn-nowDate': index - firstWeekday - 6 === day}\"\n            @click=\"returnDay(index, 'first')\">1</span>\n          </div>\n\n          <div class=\"unicorn-dayLine\">\n            <span ref=\"dayLine1\" v-for=\"index in 7\" :key=\"index\" \n            class=\"unicorn-day\"\n            :class=\"{'unicorn-day-notnow': index < firstWeekday, \n            'unicorn-nowDate': index - firstWeekday + 1 === day}\"\n            @click=\"returnDay(index)\">1</span>\n          </div>\n          \n          <div class=\"unicorn-dayLine\">\n            <span ref=\"dayLine2\" v-for=\"index in 7\" :key=\"index\" \n            class=\"unicorn-day\"\n            :class=\"{'unicorn-nowDate': index + 8 - firstWeekday === day}\"\n            @click=\"returnDay(index + 7)\">1</span>\n          </div>\n\n          <div class=\"unicorn-dayLine\">\n            <span ref=\"dayLine3\" v-for=\"index in 7\" :key=\"index\" \n            class=\"unicorn-day\"\n            :class=\"{'unicorn-nowDate': index + 15 - firstWeekday === day}\"\n            @click=\"returnDay(index + 14)\">1</span>\n          </div>\n\n          <div class=\"unicorn-dayLine\">\n            <span ref=\"dayLine4\" v-for=\"index in 7\" :key=\"index\" \n            class=\"unicorn-day\"\n            :class=\"{'unicorn-nowDate': index + 22 - firstWeekday === day}\"\n            @click=\"returnDay(index + 21)\">1</span>\n          </div>\n\n          <div class=\"unicorn-dayLine\">\n            <span ref=\"dayLine5\" v-for=\"index in 7\" :key=\"index\"\n            class=\"unicorn-day\"\n            :class=\"{'unicorn-day-notnow': index > lastWeekday + 1,\n            'unicorn-nowDate': index + 29 - firstWeekday === day}\"\n            @click=\"returnDay(index + 28)\">1</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'calendar',\n    data () {\n      return {\n        // 今年\n        year: 1970,\n        // 月数\n        month: 1,\n        // 今天号数\n        day: 1,\n        show: false,\n        monthName: ['January', 'February', 'March', \n        'April', 'May', 'June', 'July', 'August', \n        'September', 'October', 'November', 'December'],\n        dayName: ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'],\n        // 这个月的天数\n        dayArrNow: [],\n        // 下个月的天数\n        dayArrAfter: [],\n        // 上个月的天数\n        dayArrBefore: [],\n        // 今天的星期\n        nowWeekday: 4,\n        // 每个月第一天的星期数\n        firstWeekday: 4,\n        // 每个月最后一天的星期数\n        lastWeekday: 6,\n        isLeap: false\n      }\n    },\n    methods: {\n      getDateMoble () {\n        this.show = !this.show\n      },\n      setDay (dayNum, arr) {\n        for (let i = 1; i <= dayNum; i++) {\n          arr.push(i)\n        }\n      },\n      /**\n       * 根据当月份生成日期\n       * @param {Number} 当前月份\n       * @param {Arr} 存储日期的数组\n       */\n      getDate (month, arr) {\n        arr.splice(0)\n\n        if (month === 1 || month === 3 || month === 5 \n        || month === 7 || month === 8 || month === 10 \n        || month === 12) {\n          this.setDay(31, arr)\n        } else if (month === 2) {\n          if (this.isLeap) {\n            this.setDay(29, arr)\n          } else {\n            this.setDay(28, arr)\n          }\n        } else {\n          this.setDay(30, arr)\n        }\n      },\n      // 生成当前以及上个月下个月的\n      getDateNow () {\n        let now = this.month / 1\n        let after = now + 1\n        let before = now - 1\n\n        after > 12 ? after = 1 : after\n        before < 1 ? before = 12 : before \n\n        if (this.year % 400 === 0 || (this.year % 4 === 0 && this.year % 100 !==  0)) {\n          this.isLeap = true\n        } else {\n          this.isLeap = false\n        }\n\n        this.getDate(now, this.dayArrNow)\n        this.getDate(after, this.dayArrAfter)\n        this.getDate(before, this.dayArrBefore)\n      },\n      // 渲染日期\n      showDay () {\n        let dayIndex = 0\n\n        // 日期dom\n        let dayLine0 = this.$refs.dayLine0\n        let dayLine1 = this.$refs.dayLine1\n        let dayLine2 = this.$refs.dayLine2\n        let dayLine3 = this.$refs.dayLine3\n        let dayLine4 = this.$refs.dayLine4\n        let dayLine5 = this.$refs.dayLine5\n\n        // 渲染上个月的残留日期\n        dayLine1.forEach((ele, index) => {\n          if (this.firstWeekday >= index) {\n            ele.innerHTML = this.dayArrBefore[this.dayArrBefore.length - (this.firstWeekday - index - 1)]\n          }\n        })\n\n        // 渲染下个月残留日期\n        let num = 0\n        dayLine5.forEach((ele, index) => {\n          if (this.lastWeekday <= index) {\n            ele.innerHTML = this.dayArrAfter[index - num - 1]\n          } else {\n            num++\n          }\n        })\n\n        // 渲染当前月份的所有日期\n\n        dayLine1.forEach((ele, index) => {\n          if (this.firstWeekday - 1 <= index) {\n            dayIndex = index - (this.firstWeekday - 1)\n            ele.innerHTML = this.dayArrNow[dayIndex]\n          }\n        })\n\n        // 当月份开始时间5行放不下时\n        dayLine0.forEach((ele, index) => {\n          if (index - 6 >= this.firstWeekday) {\n            ele.innerHTML = this.dayArrNow[index - 6 - this.firstWeekday]\n          } else {\n            ele.innerHTML = this.dayArrBefore[this.dayArrBefore.length - 13 + index + dayIndex]\n          }\n        })\n\n        dayIndex = this.getMidDay(dayLine2, dayIndex)\n        dayIndex = this.getMidDay(dayLine3, dayIndex)\n        dayIndex = this.getMidDay(dayLine4, dayIndex)\n\n        dayLine5.forEach((ele, index) => {\n          if (this.dayArrNow[dayIndex + index + 1]) {\n            ele.innerHTML = this.dayArrNow[dayIndex + index + 1]\n          }\n        })\n      },\n      /**\n       *  渲染中间3行\n       * @param {Arr} arr 用于遍历\n       * @param {index} index 遍历开始的索引\n       * */ \n      getMidDay (arr, dayIndex) {\n        arr.forEach((ele, index) => {\n          ele.innerHTML = this.dayArrNow[dayIndex + index + 1]\n        })\n\n        return dayIndex + 7\n      },\n      /**\n       * 点击更换日期\n       * @param {number} index 传入当前索引\n       * @param {String} flag 判断是否为第一排额外多出天数\n       */\n      returnDay (index, flag) {\n        if (index < this.firstWeekday || index - 29 > this.lastWeekday) {\n          return\n        } else if (this.firstWeekday <= 0 && flag) {\n            this.day = this.dayArrNow[index - 7 - this.firstWeekday]\n        } else {\n          if (flag) {\n            return\n          } else {\n            this.day = this.dayArrNow[index - this.firstWeekday]\n            this.$emit('on-change', `${this.day}/${this.month}/${this.year}`)\n          }\n        }\n      },\n      /**\n       * 点击更改月份\n       * @param {String} 传入进入上个月或者下个月\n       */\n      changeMonth (flag) {\n        if (flag === 'go') {\n          this.month++\n          if (this.month > 12) {\n            this.year++\n            this.month = 1\n          }\n          this.changeMonthItem()\n        } else {\n          this.month--\n          if (this.month < 1) {\n            this.year--\n            this.month = 12\n          }\n          this.changeMonthItem()\n        }\n      },\n      /**\n       * 更改月份时的操作\n       */\n      changeMonthItem () {\n        this.getDateNow()\n        this.getFL()\n        this.day = 1\n        this.showDay()\n      },\n      /**\n       * 生成每月第一天以及最后一天\n       */\n      getFL () {\n        let lastWeekday = new Date(this.year, this.month, 0)\n\n        this.lastWeekday = lastWeekday.getDay()\n        this.firstWeekday = this.lastWeekday + 30 - this.dayArrNow.length\n      }\n    },\n    mounted () {\n      let date = new Date();\n      let month = date.getMonth() + 1<10? \"0\"+(date.getMonth() + 1):date.getMonth() + 1\n      let strDate = date.getDate()<10? \"0\" + date.getDate():date.getDate()\n  \n      this.year =  date.getFullYear()\n      this.month = month\n      this.day = strDate\n      this.nowWeekday = date.getDay()\n\n      this.getDateNow()\n      this.getFL()\n\n      this.$emit('on-change', `${this.day}/${this.month}/${this.year}`)\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .unicorn-calendar-main {\n    background-color: #efefef;\n    border-radius: 6px;\n    width: 320px;\n\n    .unicorn-calendar-sec {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      height: 48px;\n      padding: 0 15px;\n      background-color: #FFF;\n      border-radius: 6px;\n      box-shadow: 0 0 5px rgba(0, 0, 0, .2);\n      font-size: 14px;\n\n      & img {\n        cursor: pointer;\n      }\n    }\n\n    .unicorn-calendar-choose-sec {\n      margin-top: 10px;\n      padding: 0 15px;\n      height: 286px;\n      border-radius: 6px;\n      background-color: #FFF;\n\n      .unicorn-calendar-choose-month {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        height: 50px;\n\n        & img {\n          cursor: pointer;\n        }\n      }\n\n      .unicorn-calendar-choose-day-sec {\n\n        .unicorn-calendar-choose-dayName {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          font-size: 12px;\n          color: #cac2d0;\n\n          & span {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            width: 29px;\n          }\n        }\n\n        .unicorn-line {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-top: 5px;\n\n          .unicorn-line-item {\n            height: 1px;\n            border-radius: 6px;\n            width: 6px;\n            background-color: #e9e8ea;\n          }\n        }\n\n        .unicorn-day-sec {\n          .unicorn-dayLine {\n            display: flex;\n            justify-content: space-between;\n            margin: 5px 0;\n\n            & :last-child {\n              color: #ff9740 !important;\n            }\n\n            .unicorn-day {\n              display: flex;\n              justify-content: center;\n              align-items: center;\n              height: 29px; \n              width: 29px;\n              font-size: 12px;\n              border-radius: 50%;\n              cursor: pointer;\n\n              &:hover {\n                background-color: #ebdaf0;\n                color: #b649f0 !important;\n              }\n            }\n\n            .unicorn-day-notnow {\n              opacity: .2;\n              cursor: not-allowed;\n\n              &:hover {\n                background-color: rgba(0, 0, 0, 0);\n                color: #000 !important;\n              }\n            }\n\n            .unicorn-nowDate {\n              background-color: #a376b5;\n              color: #FFF !important;\n            }\n          }\n\n        }\n      }\n    }\n  }\n</style>"],"sourceRoot":"src/components/Calendar"}]}